# detalle del balanceo de cargas
apiVersion: v1
kind: Service
metadata:
  name: kubeservice
spec:
  selector:
    app: kubeusers 
    # kubeusers es el nombre del servicio que despliego mas abajo
  ports:
  - port: 80
  # recibe peticiones en el puerto 80 y las redirige al 8080 (balanceo de cargas)
    targetPort: 8080
  type: LoadBalancer
---
# detalle de contenedores
apiVersion: apps/v1
kind: Deployment
# despliegue
metadata:
  name: kubedeploy
spec:
  replicas: 5
  # 5 contenedores
  selector:
    matchLabels:
      app: kubeusers
      # nombre del servicio que despliego arriba
  template:
    metadata:
      labels:
        app: kubeusers
    spec:
      containers:
      - name: kubecontainer
        image: daravhel/tercerpreentrega:1.0.0
        # especifico la imagen que quiero que tenga
        ports:
        - containerPort: 8080
        # puerto que usa ese contendor
        env:
        - name: MONGO_URL
        # variable de entorno con direccion de mongo, que espera recibir el programa. En este caso direccion de mi mongo atlas
          value: mongodb+srv://daravhel:coderhouse@cluster0.zibn0jy.mongodb.net/?retryWrites=true&w=majority
        imagePullPolicy: Always
        # allways = siempre que ejecute esto voy a descargar las imagenes. hay otras politicas: cacheadas, descargadas de pc, no descargar, desde archivo,etc
